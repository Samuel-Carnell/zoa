{"version":3,"file":"index.esm.js","sources":["../src/setup.ts","../src/endpoint.ts","../src/router.ts","../src/KoaRegister.ts","../src/httpStatusCodes.ts","../src/OpenApiRegister.ts","../src/app.ts"],"sourcesContent":["import * as zod from 'zod';\nimport { extendZodWithOpenApi } from '@asteasolutions/zod-to-openapi';\n\nextendZodWithOpenApi(zod);\n","import { HttpStatusCode } from './httpStatusCodes';\nimport {\n\tEndpointDefinition,\n\tInternalEndpointDefinition,\n\tRequestValue,\n\tResponseValue,\n} from './types';\nimport * as zod from 'zod';\n\nexport class Endpoint<TEndpointDefinition extends EndpointDefinition> {\n\tconstructor(private _endpoint: InternalEndpointDefinition<TEndpointDefinition>) {}\n\n\tpublic response<TStatusCode extends HttpStatusCode>(\n\t\tstatusCode: TStatusCode\n\t): Endpoint<{\n\t\tpath: TEndpointDefinition['path'];\n\t\tmethod: TEndpointDefinition['method'];\n\t\tquery: TEndpointDefinition['query'];\n\t\trequest: TEndpointDefinition['request'];\n\t\tresponse: TEndpointDefinition['response'] | [TStatusCode];\n\t}>;\n\tpublic response<TStatusCode extends HttpStatusCode, TResponseSchema extends zod.ZodTypeAny>(\n\t\tstatusCode: TStatusCode,\n\t\tresponseSchema: TResponseSchema\n\t): Endpoint<{\n\t\tpath: TEndpointDefinition['path'];\n\t\tmethod: TEndpointDefinition['method'];\n\t\tquery: TEndpointDefinition['query'];\n\t\trequest: TEndpointDefinition['request'];\n\t\tresponse: TEndpointDefinition['response'] | [TStatusCode, TResponseSchema];\n\t}>;\n\tpublic response(statusCode: HttpStatusCode, responseSchema?: zod.ZodTypeAny | undefined) {\n\t\tconst response = (\n\t\t\tresponseSchema !== undefined ? [statusCode, responseSchema] : [statusCode]\n\t\t) as [HttpStatusCode, zod.ZodTypeAny] | [HttpStatusCode];\n\t\tthis._endpoint.response.push(response);\n\t\treturn this as unknown;\n\t}\n\n\tpublic query<\n\t\tTQuery extends {\n\t\t\t[key: string]: Zod.ZodOptional<Zod.ZodString | Zod.ZodNumber> | Zod.ZodString | Zod.ZodNumber;\n\t\t}\n\t>(query: TQuery) {\n\t\tthis._endpoint.query = query;\n\t\treturn this as unknown as Endpoint<{\n\t\t\tpath: TEndpointDefinition['path'];\n\t\t\tmethod: TEndpointDefinition['method'];\n\t\t\tquery: TQuery;\n\t\t\trequest: TEndpointDefinition['request'];\n\t\t\tresponse: TEndpointDefinition['response'];\n\t\t}>;\n\t}\n\n\tpublic handler(\n\t\thandler: (\n\t\t\trequest: RequestValue<TEndpointDefinition>\n\t\t) => ResponseValue<TEndpointDefinition['response']>\n\t) {\n\t\tthis._endpoint.handler = handler;\n\t}\n\n\tpublic summary(summary: string) {\n\t\tthis._endpoint.summary = summary;\n\t\treturn this;\n\t}\n\n\tpublic description(description: string) {\n\t\tthis._endpoint.description = description;\n\t\treturn this;\n\t}\n\n\tpublic tag(tag: string) {\n\t\tthis._endpoint.tags.push(tag);\n\t\treturn this;\n\t}\n\n\tpublic body<TBody extends zod.ZodTypeAny>(schema: TBody) {\n\t\tthis._endpoint.request.body = schema;\n\t\treturn this as unknown as Endpoint<{\n\t\t\tpath: TEndpointDefinition['path'];\n\t\t\tmethod: TEndpointDefinition['method'];\n\t\t\tquery: TEndpointDefinition['query'];\n\t\t\trequest: { body: TBody };\n\t\t\tresponse: TEndpointDefinition['response'];\n\t\t}>;\n\t}\n\n\tprotected build(): InternalEndpointDefinition[] {\n\t\treturn [this._endpoint];\n\t}\n}\n","import {\n\tEndpointBuilder,\n\tHttpMethod,\n\tInternalEndpointDefinition,\n\tInternalRouteDefinition,\n\tJoinPath,\n\tParams,\n\tRouteDefinition,\n} from './types';\nimport * as zod from 'zod';\nimport * as koa from 'koa';\nimport { Endpoint } from './endpoint';\n\nfunction joinPath(segmentA: string, segmentB: string) {\n\treturn (\n\t\t(segmentA.endsWith('/') ? segmentA.slice(0, -1) : segmentA) +\n\t\t'/' +\n\t\t(segmentB.startsWith('/') ? segmentB.slice(1) : segmentB)\n\t);\n}\n\nfunction cloneRoute(route: InternalRouteDefinition): InternalRouteDefinition {\n\treturn {\n\t\tpath: {\n\t\t\tvalue: route.path.value,\n\t\t\tparameters: { ...route.path.parameters },\n\t\t},\n\t\ttags: [...route.tags],\n\t\tmiddleware: [...route.middleware],\n\t} as InternalRouteDefinition;\n}\n\nexport class Router<TRouteDefinition extends RouteDefinition> {\n\tprivate readonly _endpointBuilders: Array<EndpointBuilder> = [];\n\n\tprotected constructor(private _route: InternalRouteDefinition<TRouteDefinition>) {}\n\n\tpublic use(middleware: koa.Middleware<koa.DefaultState, koa.DefaultContext, unknown>) {\n\t\tthis._route.middleware?.push(middleware);\n\t\treturn this;\n\t}\n\n\tpublic path<TPath extends string, TParameters extends { [P in Params<TPath>]: zod.ZodString }>(\n\t\tpath: TPath,\n\t\tparameters?: TParameters\n\t) {\n\t\tconst newRoute = cloneRoute(this._route);\n\t\tnewRoute.path.value = joinPath(this._route.path.value, path);\n\t\tnewRoute.path.parameters = { ...this._route.path.parameters, ...parameters };\n\n\t\tconst router = new Router<{\n\t\t\tpath: {\n\t\t\t\tvalue: JoinPath<TRouteDefinition['path']['value'], TPath>;\n\t\t\t\tparameters: TRouteDefinition['path']['parameters'] & TParameters;\n\t\t\t};\n\t\t}>(newRoute as any);\n\t\tthis._endpointBuilders.push(router as unknown as EndpointBuilder);\n\t\treturn router;\n\t}\n\n\tpublic tag(tag: string) {\n\t\tthis._route.tags.push(tag);\n\t\treturn this;\n\t}\n\n\tpublic endpoint<TMethod extends HttpMethod>(method: TMethod) {\n\t\tconst endpointDefinition: InternalEndpointDefinition = {\n\t\t\t...cloneRoute(this._route),\n\t\t\tmethod,\n\t\t\trequest: {},\n\t\t\tquery: {},\n\t\t\tresponse: [],\n\t\t\tsummary: '',\n\t\t\tdescription: '',\n\t\t};\n\n\t\tconst endpoint = new Endpoint(endpointDefinition);\n\t\tthis._endpointBuilders.push(endpoint as unknown as EndpointBuilder);\n\t\treturn endpoint as Endpoint<{\n\t\t\tpath: {\n\t\t\t\tvalue: TRouteDefinition['path']['value'];\n\t\t\t\tparameters: TRouteDefinition['path']['parameters'];\n\t\t\t};\n\t\t\tmethod: TMethod;\n\t\t\tquery: {};\n\t\t\trequest: { body: undefined };\n\t\t\tresponse: never;\n\t\t\tdescription: string;\n\t\t\tsummary: string;\n\t\t\ttag: string;\n\t\t}>;\n\t}\n\n\tprotected build(): InternalEndpointDefinition[] {\n\t\treturn this._endpointBuilders.flatMap((x) => x.build());\n\t}\n}\n","import * as koa from 'koa';\nimport KoaRouter from '@koa/router';\nimport { EndpointDefinition, HttpMethod, InternalEndpointDefinition } from './types';\nimport * as zod from 'zod';\nimport rawBody from 'raw-body';\nimport { HttpStatusCode } from 'httpStatusCodes';\n\nconst pathValidation = (parameters: EndpointDefinition['path']['parameters']): koa.Middleware => {\n\treturn (ctx: any, next: any) => {\n\t\tconst errors: any[] = [];\n\t\tconst schema = zod.object(parameters);\n\t\tconst result = schema.safeParse(ctx.params);\n\t\tif (!result.success) {\n\t\t\tfor (const error of result.error.errors) {\n\t\t\t\terrors.push({ name: error.path[0], message: error.message });\n\t\t\t}\n\t\t}\n\n\t\tconst hasError = errors.length > 0;\n\t\tif (hasError) {\n\t\t\tsetResponse(ctx.response, '422', 'application/problem+json', {\n\t\t\t\ttype: 'https://tools.ietf.org/html/rfc7231#section-6.5.1',\n\t\t\t\ttitle: 'Path contained one or more validation errors.',\n\t\t\t\tstatus: 422,\n\t\t\t\terrors: errors,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tctx._internalRequest.path = ctx.params;\n\t\treturn next();\n\t};\n};\n\nconst queryValidation = (query: EndpointDefinition['query']) => {\n\treturn (ctx: koa.Context, next: koa.Next) => {\n\t\tconst errors: any[] = [];\n\t\tconst schema = zod.object(query);\n\t\tconst result = schema.safeParse(ctx.query);\n\t\tif (!result.success) {\n\t\t\tfor (const error of result.error.errors) {\n\t\t\t\terrors.push({ name: error.path[0], message: error.message });\n\t\t\t}\n\t\t}\n\n\t\tconst hasError = errors.length > 0;\n\t\tif (hasError) {\n\t\t\tsetResponse(ctx.response, '422', 'application/problem+json', {\n\t\t\t\ttype: 'https://tools.ietf.org/html/rfc7231#section-6.5.1',\n\t\t\t\ttitle: 'Query contained one or more validation errors.',\n\t\t\t\tstatus: 422,\n\t\t\t\terrors: errors,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tctx._internalRequest.query = ctx.query;\n\t\treturn next();\n\t};\n};\n\nconst bodyValidation = (\n\tbodySchema: NonNullable<EndpointDefinition['request']['body']>\n): koa.Middleware => {\n\treturn async (ctx: any, next: any) => {\n\t\tlet parsedBody;\n\t\tconst body = await rawBody(ctx.request.req).then((body) => body.toString());\n\t\ttry {\n\t\t\tparsedBody = JSON.parse(body);\n\t\t} catch {\n\t\t\tsetResponse(ctx.response, '422', 'application/problem+json', {\n\t\t\t\ttype: 'https://tools.ietf.org/html/rfc7231#section-6.5.1',\n\t\t\t\ttitle: 'Malformed request body.',\n\t\t\t\tstatus: 400,\n\t\t\t\tdetail: 'Request body contains invalid JSON.',\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tconst errors: any[] = [];\n\t\tconst result = bodySchema.safeParse(parsedBody);\n\t\tif (!result.success) {\n\t\t\tfor (const error of result.error.errors) {\n\t\t\t\terrors.push({ name: error.path.join('.'), message: error.message });\n\t\t\t}\n\t\t}\n\n\t\tconst hasError = errors.length > 0;\n\t\tif (hasError) {\n\t\t\tsetResponse(ctx.response, '422', 'application/problem+json', {\n\t\t\t\ttype: 'https://tools.ietf.org/html/rfc7231#section-6.5.1',\n\t\t\t\ttitle: 'Body contained one or more validation errors.',\n\t\t\t\tstatus: 422,\n\t\t\t\terrors: errors,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tctx._internalRequest.body = parsedBody;\n\t\treturn next();\n\t};\n};\n\nfunction setResponse(\n\tresponse: koa.Response,\n\tstatus: HttpStatusCode,\n\tmimeType: string,\n\tbody?: unknown\n) {\n\tresponse.status = parseInt(status);\n\tif (body !== undefined) {\n\t\tresponse.body = body;\n\t\tresponse.append('content-type', mimeType);\n\t}\n}\n\nexport function registerEndpointWithKoaRouter(\n\tendpoint: InternalEndpointDefinition,\n\trouter: KoaRouter\n) {\n\tconst middleware = [\n\t\t...endpoint.middleware,\n\t\t(ctx: koa.Context, next: koa.Next) => {\n\t\t\tctx._internalRequest = {};\n\t\t\tnext();\n\t\t},\n\t];\n\tif (Object.entries(endpoint.path.parameters).length > 0) {\n\t\tmiddleware.push(pathValidation(endpoint.path.parameters));\n\t}\n\n\tif (endpoint.query !== undefined) {\n\t\tmiddleware.push(queryValidation(endpoint.query));\n\t}\n\n\tif (endpoint.request.body !== undefined) {\n\t\tmiddleware.push(bodyValidation(endpoint.request.body));\n\t}\n\n\tconst method = endpoint.method.toLowerCase() as Lowercase<HttpMethod>;\n\trouter[method](endpoint.path.value, ...middleware, (ctx: koa.Context) => {\n\t\tif (endpoint.handler === undefined) {\n\t\t\tctx.response.status = 503;\n\t\t\treturn;\n\t\t}\n\n\t\tconst [status, body] = endpoint.handler({\n\t\t\t...ctx.request,\n\t\t\tendpoint: endpoint as unknown as EndpointDefinition,\n\t\t\tpath: ctx._internalRequest.path,\n\t\t\tquery: ctx._internalRequest.query,\n\t\t\tbody: ctx._internalRequest.body,\n\t\t});\n\t\tsetResponse(ctx.response, status, 'application/json', body);\n\t});\n}\n","const statusCodeToReasonPhrase: Record<HttpStatusCode, string> = {\n\t'202': 'Accepted',\n\t'502': 'Bad Gateway',\n\t'400': 'Bad Request',\n\t'409': 'Conflict',\n\t'100': 'Continue',\n\t'201': 'Created',\n\t'417': 'Expectation Failed',\n\t'424': 'Failed Dependency',\n\t'403': 'Forbidden',\n\t'504': 'Gateway Timeout',\n\t'410': 'Gone',\n\t'505': 'HTTP Version Not Supported',\n\t'418': \"I'm a teapot\",\n\t'419': 'Insufficient Space on Resource',\n\t'507': 'Insufficient Storage',\n\t'500': 'Internal Server Error',\n\t'411': 'Length Required',\n\t'423': 'Locked',\n\t'420': 'Method Failure',\n\t'405': 'Method Not Allowed',\n\t'301': 'Moved Permanently',\n\t'302': 'Moved Temporarily',\n\t'207': 'Multi-Status',\n\t'300': 'Multiple Choices',\n\t'511': 'Network Authentication Required',\n\t'204': 'No Content',\n\t'203': 'Non Authoritative Information',\n\t'406': 'Not Acceptable',\n\t'404': 'Not Found',\n\t'501': 'Not Implemented',\n\t'304': 'Not Modified',\n\t'200': 'OK',\n\t'206': 'Partial Content',\n\t'402': 'Payment Required',\n\t'308': 'Permanent Redirect',\n\t'412': 'Precondition Failed',\n\t'428': 'Precondition Required',\n\t'102': 'Processing',\n\t'103': 'Early Hints',\n\t'426': 'Upgrade Required',\n\t'407': 'Proxy Authentication Required',\n\t'431': 'Request Header Fields Too Large',\n\t'408': 'Request Timeout',\n\t'413': 'Request Entity Too Large',\n\t'414': 'Request-URI Too Long',\n\t'416': 'Requested Range Not Satisfiable',\n\t'205': 'Reset Content',\n\t'303': 'See Other',\n\t'503': 'Service Unavailable',\n\t'101': 'Switching Protocols',\n\t'307': 'Temporary Redirect',\n\t'429': 'Too Many Requests',\n\t'401': 'Unauthorized',\n\t'451': 'Unavailable For Legal Reasons',\n\t'422': 'Unprocessable Entity',\n\t'415': 'Unsupported Media Type',\n\t'305': 'Use Proxy',\n\t'421': 'Misdirected Request',\n};\n\nexport function reasonPhrase(statusCode: HttpStatusCode): string {\n\treturn statusCodeToReasonPhrase[statusCode];\n}\n\nexport type HttpStatusCode =\n\t| '202'\n\t| '502'\n\t| '400'\n\t| '409'\n\t| '100'\n\t| '201'\n\t| '417'\n\t| '424'\n\t| '403'\n\t| '504'\n\t| '410'\n\t| '505'\n\t| '418'\n\t| '419'\n\t| '507'\n\t| '500'\n\t| '411'\n\t| '423'\n\t| '420'\n\t| '405'\n\t| '301'\n\t| '302'\n\t| '207'\n\t| '300'\n\t| '511'\n\t| '204'\n\t| '203'\n\t| '406'\n\t| '404'\n\t| '501'\n\t| '304'\n\t| '200'\n\t| '206'\n\t| '402'\n\t| '308'\n\t| '412'\n\t| '428'\n\t| '102'\n\t| '103'\n\t| '426'\n\t| '407'\n\t| '431'\n\t| '408'\n\t| '413'\n\t| '414'\n\t| '416'\n\t| '205'\n\t| '303'\n\t| '503'\n\t| '101'\n\t| '307'\n\t| '429'\n\t| '401'\n\t| '451'\n\t| '422'\n\t| '415'\n\t| '305'\n\t| '421';\n","import { OpenAPIRegistry, ResponseConfig, ZodContentObject } from '@asteasolutions/zod-to-openapi';\nimport { reasonPhrase } from './httpStatusCodes';\nimport { InternalEndpointDefinition } from './types';\nimport * as zod from 'zod';\n\nfunction formatPath(path: string) {\n\treturn path\n\t\t.split('/')\n\t\t.map((segment) => {\n\t\t\tif (segment.startsWith(':')) {\n\t\t\t\treturn `{${segment.slice(1)}}`;\n\t\t\t}\n\n\t\t\treturn segment;\n\t\t})\n\t\t.join('/');\n}\n\nexport function registerEndpointWithOpenApi(\n\tendpoint: InternalEndpointDefinition,\n\tregistry: OpenAPIRegistry\n) {\n\tregistry.registerPath({\n\t\tpath: formatPath(endpoint.path.value),\n\t\tmethod: endpoint.method.toLowerCase() as Lowercase<InternalEndpointDefinition['method']>,\n\t\ttags: endpoint.tags,\n\t\trequest: {\n\t\t\tparams: zod.object(endpoint.path.parameters),\n\t\t\tquery: zod.object(endpoint.query),\n\t\t},\n\t\tresponses: endpoint.response.reduce<{ [statusCode: string]: ResponseConfig }>(\n\t\t\t(obj, response) => {\n\t\t\t\tconst [status, schema] = response;\n\t\t\t\tconst content: ZodContentObject | undefined =\n\t\t\t\t\tschema !== undefined ? { 'application/json': { schema } } : undefined;\n\t\t\t\tobj[status] = {\n\t\t\t\t\tdescription: reasonPhrase(status),\n\t\t\t\t\tcontent,\n\t\t\t\t};\n\t\t\t\treturn obj;\n\t\t\t},\n\t\t\t{}\n\t\t),\n\t});\n}\n","import { Router } from './router';\nimport { InternalEndpointDefinition, InternalRouteDefinition } from './types';\nimport KoaRouter from '@koa/router';\nimport { registerEndpointWithKoaRouter } from './KoaRegister';\nimport { OpenAPIRegistry, OpenApiGeneratorV3 } from '@asteasolutions/zod-to-openapi';\nimport { registerEndpointWithOpenApi } from './OpenApiRegister';\nimport { OpenAPIComponentObject } from '@asteasolutions/zod-to-openapi/dist/openapi-registry';\n\nconst initialRoute = (): InternalRouteDefinition<InitialRoute> => ({\n\tpath: { value: '/', parameters: {} },\n\tmiddleware: [],\n\ttags: [],\n});\ntype InitialRoute = { path: { value: '/'; parameters: {} }; tag: string };\n\nexport class App extends Router<InitialRoute> {\n\tprivate _endpointsCache?: InternalEndpointDefinition[];\n\n\tpublic constructor() {\n\t\tsuper(initialRoute());\n\t}\n\n\tpublic get endpoints() {\n\t\tif (this._endpointsCache !== undefined) {\n\t\t\treturn this._endpointsCache;\n\t\t}\n\n\t\tthis._endpointsCache = this.build();\n\t\treturn this._endpointsCache;\n\t}\n\n\tpublic middleware() {\n\t\tconst router = new KoaRouter();\n\t\tfor (const endpoint of this.endpoints) {\n\t\t\tregisterEndpointWithKoaRouter(endpoint, router);\n\t\t}\n\t\treturn router.middleware();\n\t}\n\n\tpublic openApiDocument(info: {\n\t\ttitle: string;\n\t\tdescription?: string;\n\t\ttermsOfService?: string;\n\t\tcontact?: {\n\t\t\tname?: string;\n\t\t\turl?: string;\n\t\t\temail?: string;\n\t\t};\n\t\tlicense?: {\n\t\t\tname: string;\n\t\t\tidentifier?: string;\n\t\t\turl?: string;\n\t\t};\n\t\tversion: string;\n\t}): OpenAPIComponentObject {\n\t\tconst registry = new OpenAPIRegistry();\n\t\tfor (const endpoint of this.endpoints) {\n\t\t\tregisterEndpointWithOpenApi(endpoint, registry);\n\t\t}\n\n\t\treturn new OpenApiGeneratorV3(registry.definitions).generateDocument({\n\t\t\topenapi: '3.0.0',\n\t\t\tinfo,\n\t\t});\n\t}\n}\n"],"names":["extendZodWithOpenApi","zod","Endpoint","constructor","_endpoint","this","response","statusCode","responseSchema","undefined","push","query","handler","summary","description","tag","tags","body","schema","request","build","cloneRoute","route","path","value","parameters","middleware","Router","_route","_endpointBuilders","use","_a","newRoute","segmentA","segmentB","endsWith","slice","startsWith","router","endpoint","method","endpointDefinition","Object","assign","flatMap","x","setResponse","status","mimeType","parseInt","append","registerEndpointWithKoaRouter","ctx","next","_internalRequest","bodySchema","entries","length","errors","result","object","safeParse","params","success","error","name","message","type","title","__awaiter","parsedBody","rawBody","req","then","toString","JSON","parse","detail","join","toLowerCase","statusCodeToReasonPhrase","registerEndpointWithOpenApi","registry","registerPath","split","map","segment","responses","reduce","obj","content","App","super","endpoints","_endpointsCache","KoaRouter","openApiDocument","info","OpenAPIRegistry","OpenApiGeneratorV3","definitions","generateDocument","openapi"],"mappings":"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"}